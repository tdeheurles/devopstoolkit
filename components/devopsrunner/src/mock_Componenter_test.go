// Code generated by mockery v2.22.1. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockComponenter is an autogenerated mock type for the Componenter type
type MockComponenter struct {
	mock.Mock
}

type MockComponenter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockComponenter) EXPECT() *MockComponenter_Expecter {
	return &MockComponenter_Expecter{mock: &_m.Mock}
}

// Assert provides a mock function with given fields:
func (_m *MockComponenter) Assert() {
	_m.Called()
}

// MockComponenter_Assert_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Assert'
type MockComponenter_Assert_Call struct {
	*mock.Call
}

// Assert is a helper method to define mock.On call
func (_e *MockComponenter_Expecter) Assert() *MockComponenter_Assert_Call {
	return &MockComponenter_Assert_Call{Call: _e.mock.On("Assert")}
}

func (_c *MockComponenter_Assert_Call) Run(run func()) *MockComponenter_Assert_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockComponenter_Assert_Call) Return() *MockComponenter_Assert_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockComponenter_Assert_Call) RunAndReturn(run func()) *MockComponenter_Assert_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockComponenter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockComponenter creates a new instance of MockComponenter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockComponenter(t mockConstructorTestingTNewMockComponenter) *MockComponenter {
	mock := &MockComponenter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
