// Code generated by mockery v2.21.1. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockConfigurationer is an autogenerated mock type for the Configurationer type
type MockConfigurationer struct {
	mock.Mock
}

type MockConfigurationer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigurationer) EXPECT() *MockConfigurationer_Expecter {
	return &MockConfigurationer_Expecter{mock: &_m.Mock}
}

// GetString provides a mock function with given fields: key
func (_m *MockConfigurationer) GetString(key string) string {
	ret := _m.Called(key)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockConfigurationer_GetString_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetString'
type MockConfigurationer_GetString_Call struct {
	*mock.Call
}

// GetString is a helper method to define mock.On call
//   - key string
func (_e *MockConfigurationer_Expecter) GetString(key interface{}) *MockConfigurationer_GetString_Call {
	return &MockConfigurationer_GetString_Call{Call: _e.mock.On("GetString", key)}
}

func (_c *MockConfigurationer_GetString_Call) Run(run func(key string)) *MockConfigurationer_GetString_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockConfigurationer_GetString_Call) Return(_a0 string) *MockConfigurationer_GetString_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigurationer_GetString_Call) RunAndReturn(run func(string) string) *MockConfigurationer_GetString_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockConfigurationer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockConfigurationer creates a new instance of MockConfigurationer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockConfigurationer(t mockConstructorTestingTNewMockConfigurationer) *MockConfigurationer {
	mock := &MockConfigurationer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
